// SPDX-License-Identifier: MIT
pragma solidity >=0.8.24;

/* Autogenerated file. Do not edit manually. */

import { EncodedLengths } from "@latticexyz/store/src/EncodedLengths.sol";
import { ResourceId } from "@latticexyz/store/src/ResourceId.sol";
import { createTemplate } from "base/libraries/templates/createTemplate.sol";
import { UnitTypes, CombatArchetypes, TerrainTypes, StructureTypes } from "base/codegen/common.sol";

import { Combat, UnitType, GoldOnKill, RequiresSetup, Movable, Untraversable } from "base/codegen/index.sol";

bytes32 constant templateId = "Catapult";
bytes32 constant CatapultTemplateId = templateId;
uint256 constant LENGTH = 6;

function CatapultTemplate() {
  bytes32[] memory tableIds = new bytes32[](LENGTH);
  bytes32[] memory encodedLengthss = new bytes32[](LENGTH);
  bytes[] memory staticDatas = new bytes[](LENGTH);
  bytes[] memory dynamicDatas = new bytes[](LENGTH);

  bytes memory staticData;
  EncodedLengths encodedLengths;
  bytes memory dynamicData;

  tableIds[0] = ResourceId.unwrap(Combat._tableId);
  tableIds[1] = ResourceId.unwrap(UnitType._tableId);
  tableIds[2] = ResourceId.unwrap(GoldOnKill._tableId);
  tableIds[3] = ResourceId.unwrap(RequiresSetup._tableId);
  tableIds[4] = ResourceId.unwrap(Movable._tableId);
  tableIds[5] = ResourceId.unwrap(Untraversable._tableId);

  (staticData, encodedLengths, dynamicData) = Combat.encode(
    120000,
    120000,
    60000,
    -100,
    3,
    4,
    CombatArchetypes(uint8(8))
  );
  staticDatas[0] = staticData;
  encodedLengthss[0] = EncodedLengths.unwrap(encodedLengths);
  dynamicDatas[0] = dynamicData;

  (staticData, encodedLengths, dynamicData) = UnitType.encode(UnitTypes(uint8(8)));
  staticDatas[1] = staticData;
  encodedLengthss[1] = EncodedLengths.unwrap(encodedLengths);
  dynamicDatas[1] = dynamicData;

  (staticData, encodedLengths, dynamicData) = GoldOnKill.encode(250);
  staticDatas[2] = staticData;
  encodedLengthss[2] = EncodedLengths.unwrap(encodedLengths);
  dynamicDatas[2] = dynamicData;

  (staticData, encodedLengths, dynamicData) = RequiresSetup.encode(true);
  staticDatas[3] = staticData;
  encodedLengthss[3] = EncodedLengths.unwrap(encodedLengths);
  dynamicDatas[3] = dynamicData;

  (staticData, encodedLengths, dynamicData) = Movable.encode(2000);
  staticDatas[4] = staticData;
  encodedLengthss[4] = EncodedLengths.unwrap(encodedLengths);
  dynamicDatas[4] = dynamicData;

  (staticData, encodedLengths, dynamicData) = Untraversable.encode(true);
  staticDatas[5] = staticData;
  encodedLengthss[5] = EncodedLengths.unwrap(encodedLengths);
  dynamicDatas[5] = dynamicData;

  createTemplate(templateId, tableIds, staticDatas, encodedLengthss, dynamicDatas);
}
